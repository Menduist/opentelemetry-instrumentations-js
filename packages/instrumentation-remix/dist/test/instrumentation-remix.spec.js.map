{"version":3,"file":"instrumentation-remix.spec.js","sourceRoot":"","sources":["../../test/instrumentation-remix.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import \"mocha\";\nimport * as React from \"react\";\nimport expect from \"expect\";\nimport { RemixInstrumentation } from \"../src\";\nimport { SemanticAttributes } from \"@opentelemetry/semantic-conventions\";\nimport { getTestSpans } from \"opentelemetry-instrumentation-testing-utils\";\nimport type { ReadableSpan } from \"@opentelemetry/sdk-trace-base\";\n\nimport * as semver from \"semver\";\n\nconst instrumentationConfig = {\n  actionFormDataAttributes: {\n    _action: \"actionType\",\n    foo: false,\n    num: true,\n  },\n  legacyErrorAttributes: false,\n};\n\nconst instrumentation = new RemixInstrumentation(instrumentationConfig);\n\nimport { installGlobals } from \"@remix-run/node\";\n\nimport * as remixServerRuntime from \"@remix-run/server-runtime\";\nimport type { ServerBuild, ServerEntryModule } from \"@remix-run/server-runtime\";\nimport { SpanStatusCode } from \"@opentelemetry/api\";\nconst remixServerRuntimePackage = require(\"@remix-run/server-runtime/package.json\");\n\n/** REMIX SERVER BUILD */\n\nconst routes: ServerBuild[\"routes\"] = {\n  \"routes/parent\": {\n    id: \"routes/parent\",\n    path: \"/parent\",\n    module: {\n      loader: () => \"LOADER\",\n      action: () => \"ACTION\",\n      default: () => React.createElement(\"div\", {}, \"routes/parent\"),\n    },\n  },\n  \"routes/parent/child/$id\": {\n    id: \"routes/parent/child/$id\",\n    parentId: \"routes/parent\",\n    path: \"/parent/child/:id\",\n    module: {\n      loader: () => \"LOADER\",\n      action: () => \"ACTION\",\n      default: () => React.createElement(\"div\", {}, \"routes/parent/child/$id\"),\n    },\n  },\n  \"routes/throws-error\": {\n    id: \"routes/throws-error\",\n    path: \"/throws-error\",\n    module: {\n      loader: async () => {\n        throw new Error(\"oh no loader\");\n      },\n      action: async () => {\n        throw new Error(\"oh no action\");\n      },\n      default: undefined,\n    },\n  },\n  \"routes/has-no-loader-or-action\": {\n    id: \"routes/has-no-loader-or-action\",\n    path: \"/has-no-loader-or-action\",\n    module: {\n      default: () => React.createElement(\"div\", {}, \"routes/has-no-loader-or-action\"),\n    },\n  },\n  // Implicitly used to handle 404s\n  root: {\n    id: \"root\",\n    module: {\n      default: () => React.createElement(\"div\", {}, \"root\"),\n    },\n  },\n};\n\nconst entryModule: ServerEntryModule = {\n  default: (request, responseStatusCode, responseHeaders, context) => {\n    if (new URL(request.url).search.includes(\"throwEntryModuleError\")) {\n      throw new Error(\"oh no entry module\");\n    }\n    return new Response(undefined, { status: responseStatusCode, headers: responseHeaders });\n  },\n};\n\nlet build: ServerBuild = {\n  routes,\n  assets: {\n    routes,\n  },\n  entry: {\n    module: entryModule,\n  },\n  future: {},\n} as unknown as ServerBuild;\n\n/**\n * The `remixServerRuntime.createRequestHandler` function definition can change across versions. This\n * function will provide the proper signature based on version to creat the request handler.\n *\n * This versions used here should mirror the versions defined in `.tav.yml`.\n */\nfunction createRequestHandlerForPackageVersion(version: string): remixServerRuntime.RequestHandler {\n  if (semver.satisfies(version, \"1.1.0 - 1.3.2\")) {\n    // Version <=1.3.2 uses a configuration object\n    return (remixServerRuntime.createRequestHandler as any)(build, {}) as remixServerRuntime.RequestHandler;\n  } else if (semver.satisfies(version, \">=1.3.3\")) {\n    // Version >=1.3.3 uses a \"mode\" param of type \"production\" | \"deployment\" | \"test\"\n    return (remixServerRuntime.createRequestHandler as any)(build, \"test\") as remixServerRuntime.RequestHandler;\n  } else {\n    throw new Error(\"Unsupported @remix-run/server-runtime version\");\n  }\n}\n\n// Expects no error to appear as span attributes.\nconst expectNoAttributeError = (span: ReadableSpan) => {\n  expect(span.attributes[\"error\"]).toBeUndefined();\n  expect(span.attributes[SemanticAttributes.EXCEPTION_MESSAGE]).toBeUndefined();\n  expect(span.attributes[SemanticAttributes.EXCEPTION_STACKTRACE]).toBeUndefined();\n};\n\n// Expects no error to appear as a span exception event.\nconst expectNoEventError = (span: ReadableSpan) => {\n  expect(span.status.code).not.toBe(SpanStatusCode.ERROR);\n  expect(span.events.length).toBe(0);\n};\n\n// Expects no error to appear, either as span attributes or as a span exception event.\nconst expectNoError = (span: ReadableSpan) => {\n  expectNoAttributeError(span);\n  expectNoEventError(span);\n};\n\n// Expects an error to appear, both as span attributes and as a span exception event.\nconst expectError = (span: ReadableSpan, message: string) => {\n  expectEventError(span, message);\n  expectAttributeError(span, message);\n};\n\n// Expects an error to appear as span attributes.\nconst expectAttributeError = (span: ReadableSpan, message: string) => {\n  expect(span.attributes[\"error\"]).toBe(true);\n  expect(span.attributes[SemanticAttributes.EXCEPTION_MESSAGE]).toBe(message);\n  expect(span.attributes[SemanticAttributes.EXCEPTION_STACKTRACE]).toBeDefined();\n};\n\n// Expects an error to appear as a span exception event.\nconst expectEventError = (span: ReadableSpan, message: string) => {\n  expect(span.status.code).toBe(SpanStatusCode.ERROR);\n  expect(span.events.length).toBe(1);\n  expect(span.events[0].attributes[SemanticAttributes.EXCEPTION_MESSAGE]).toBe(message);\n  expect(span.events[0].attributes[SemanticAttributes.EXCEPTION_STACKTRACE]).toBeDefined();\n};\n\nconst expectLoaderSpan = (span: ReadableSpan, route: string, params: { [key: string]: any } = {}) => {\n  expect(span.name).toBe(`LOADER ${route}`);\n  expect(span.attributes[\"match.route.id\"]).toBe(route);\n\n  Object.entries(params).forEach(([key, value]) => {\n    expect(span.attributes[`match.params.${key}`]).toBe(value);\n  });\n};\n\nconst expectActionSpan = (span: ReadableSpan, route: string, formData: { [key: string]: any } = {}) => {\n  expect(span.name).toBe(`ACTION ${route}`);\n  expect(span.attributes[\"match.route.id\"]).toBe(route);\n\n  Object.entries(span.attributes)\n    .filter(([key]) => key.startsWith(\"formData.\"))\n    .forEach(([key, value]) => {\n      expect(formData[key.replace(\"formData.\", \"\")]).toBe(value);\n    });\n  Object.entries(formData).forEach(([key, value]) => {\n    expect(span.attributes[`formData.${key}`]).toBe(value);\n  });\n};\n\nconst expectRequestHandlerSpan = (span: ReadableSpan, { path, id }: { path: string; id: string }) => {\n  expect(span.name).toBe(`remix.request ${path}`);\n  expect(span.attributes[SemanticAttributes.HTTP_ROUTE]).toBe(path);\n  expect(span.attributes[\"match.route.id\"]).toBe(id);\n};\n\nconst expectRequestHandlerMatchNotFoundSpan = (span: ReadableSpan) => {\n  expect(span.name).toBe(\"remix.request\");\n  expect(span.attributes[SemanticAttributes.HTTP_ROUTE]).toBeUndefined();\n  expect(span.attributes[\"match.route.id\"]).toBeUndefined();\n};\n\nconst expectParentSpan = (parent: ReadableSpan, child: ReadableSpan) => {\n  expect(parent.spanContext().traceId).toBe(child.spanContext().traceId);\n  expect(parent.spanContext().spanId).toBe(child.parentSpanId);\n};\n\nconst expectResponseAttributes = (span: ReadableSpan, { status }: { status: number }) => {\n  expect(span.attributes[SemanticAttributes.HTTP_STATUS_CODE]).toBe(status);\n};\n\nconst expectNoResponseAttributes = (span: ReadableSpan) => {\n  expect(span.attributes[SemanticAttributes.HTTP_STATUS_CODE]).toBeUndefined();\n};\n\ntype RequestAttributes = { method: string; url: string };\n\nconst expectRequestAttributes = (span: ReadableSpan, { method, url }: RequestAttributes) => {\n  expect(span.attributes[SemanticAttributes.HTTP_METHOD]).toBe(method);\n  expect(span.attributes[SemanticAttributes.HTTP_URL]).toBe(url);\n};\n\nconst loaderRevalidation = (attributes: RequestAttributes): RequestAttributes => {\n  if (semver.satisfies(remixServerRuntimePackage.version, \"<1.8.2\")) {\n    return attributes;\n  }\n\n  // Remix v1.8.2+ uses @remix-run/router v1.0.5, which uses a `GET` for loader revalidation instead of `POST`.\n  // See: https://github.com/remix-run/react-router/blob/main/packages/router/CHANGELOG.md#105\n  return {\n    ...attributes,\n    method: \"GET\",\n  };\n};\n\n/** TESTS */\n\ndescribe(\"instrumentation-remix\", () => {\n  let requestHandler: remixServerRuntime.RequestHandler;\n  let consoleErrorImpl;\n  before(() => {\n    installGlobals();\n    instrumentation.enable();\n    requestHandler = createRequestHandlerForPackageVersion(remixServerRuntimePackage.version);\n    consoleErrorImpl = console.error;\n    console.error = () => {};\n  });\n\n  after(() => {\n    instrumentation.disable();\n    console.error = consoleErrorImpl;\n  });\n\n  describe(\"requestHandler\", () => {\n    it(\"has a route match when there is no loader or action\", async () => {\n      const request = new Request(\"http://localhost/has-no-loader-or-action\", { method: \"GET\" });\n      await requestHandler(request, {});\n\n      const spans = getTestSpans();\n      expect(spans.length).toBe(1);\n\n      const [requestHandlerSpan] = spans;\n\n      const expectedRequestAttributes = {\n        method: \"GET\",\n        url: \"http://localhost/has-no-loader-or-action\",\n      };\n\n      // Request handler span\n      expectRequestHandlerSpan(requestHandlerSpan, {\n        path: \"/has-no-loader-or-action\",\n        id: \"routes/has-no-loader-or-action\",\n      });\n      expectRequestAttributes(requestHandlerSpan, expectedRequestAttributes);\n      expectResponseAttributes(requestHandlerSpan, { status: 200 });\n      expectNoError(requestHandlerSpan);\n    });\n\n    it(\"does not have a route match when there is no route\", async () => {\n      const request = new Request(\"http://localhost/does-not-exist\", { method: \"GET\" });\n\n      await requestHandler(request, {});\n\n      const spans = getTestSpans();\n      expect(spans.length).toBe(1);\n\n      const [requestHandlerSpan] = spans;\n\n      const expectedRequestAttributes = {\n        method: \"GET\",\n        url: \"http://localhost/does-not-exist\",\n      };\n\n      // Request handler span\n      expectRequestHandlerMatchNotFoundSpan(requestHandlerSpan);\n      expectRequestAttributes(requestHandlerSpan, expectedRequestAttributes);\n      expectResponseAttributes(requestHandlerSpan, { status: 404 });\n      expectNoError(requestHandlerSpan);\n    });\n\n    it(\"handles thrown error from entry module\", async () => {\n      const request = new Request(\"http://localhost/parent?throwEntryModuleError\", { method: \"GET\" });\n      await requestHandler(request, {});\n\n      const spans = getTestSpans();\n      expect(spans.length).toBe(2);\n\n      const [loaderSpan, requestHandlerSpan] = spans;\n\n      expectParentSpan(requestHandlerSpan, loaderSpan);\n\n      const expectedRequestAttributes = {\n        method: \"GET\",\n        url: \"http://localhost/parent?throwEntryModuleError\",\n      };\n\n      // Loader span\n      expectLoaderSpan(loaderSpan, \"routes/parent\");\n      expectRequestAttributes(loaderSpan, expectedRequestAttributes);\n      expectResponseAttributes(loaderSpan, { status: 200 });\n      expectNoError(loaderSpan);\n\n      // Request handler span\n      expectRequestHandlerSpan(requestHandlerSpan, {\n        path: \"/parent\",\n        id: \"routes/parent\",\n      });\n      expectRequestAttributes(requestHandlerSpan, expectedRequestAttributes);\n      expectResponseAttributes(requestHandlerSpan, { status: 500 });\n      expectNoError(requestHandlerSpan);\n    });\n  });\n\n  describe(\"loaders\", () => {\n    it(\"handles basic loader\", async () => {\n      const request = new Request(\"http://localhost/parent\", { method: \"GET\" });\n      await requestHandler(request, {});\n\n      const spans = getTestSpans();\n      expect(spans.length).toBe(2);\n\n      const [loaderSpan, requestHandlerSpan] = spans;\n\n      expectParentSpan(requestHandlerSpan, loaderSpan);\n\n      const expectedRequestAttributes = {\n        method: \"GET\",\n        url: \"http://localhost/parent\",\n      };\n\n      // Loader span\n      expectLoaderSpan(loaderSpan, \"routes/parent\");\n      expectRequestAttributes(loaderSpan, expectedRequestAttributes);\n      expectResponseAttributes(loaderSpan, { status: 200 });\n      expectNoError(loaderSpan);\n\n      // Request handler span\n      expectRequestHandlerSpan(requestHandlerSpan, {\n        path: \"/parent\",\n        id: \"routes/parent\",\n      });\n      expectRequestAttributes(requestHandlerSpan, expectedRequestAttributes);\n      expectResponseAttributes(requestHandlerSpan, { status: 200 });\n      expectNoError(requestHandlerSpan);\n    });\n\n    it(\"handles parent-child loaders\", async () => {\n      const request = new Request(\"http://localhost/parent/child/123\", { method: \"GET\" });\n      await requestHandler(request, {});\n\n      const spans = getTestSpans();\n      expect(spans.length).toBe(3);\n\n      const [parentLoaderSpan, childLoaderSpan, requestHandlerSpan] = spans;\n\n      expectParentSpan(requestHandlerSpan, parentLoaderSpan);\n      expectParentSpan(requestHandlerSpan, childLoaderSpan);\n\n      const expectedRequestAttributes = {\n        method: \"GET\",\n        url: \"http://localhost/parent/child/123\",\n      };\n\n      // Parent span\n      expectLoaderSpan(parentLoaderSpan, \"routes/parent\", { id: \"123\" });\n      expectRequestAttributes(parentLoaderSpan, expectedRequestAttributes);\n      expectResponseAttributes(parentLoaderSpan, { status: 200 });\n      expectNoError(parentLoaderSpan);\n\n      // Child span\n      expectLoaderSpan(childLoaderSpan, \"routes/parent/child/$id\", { id: \"123\" });\n      expectRequestAttributes(childLoaderSpan, expectedRequestAttributes);\n      expectResponseAttributes(childLoaderSpan, { status: 200 });\n      expectNoError(childLoaderSpan);\n\n      // Request handler span\n      expectRequestHandlerSpan(requestHandlerSpan, {\n        path: \"/parent/child/:id\",\n        id: \"routes/parent/child/$id\",\n      });\n      expectRequestAttributes(requestHandlerSpan, expectedRequestAttributes);\n      expectResponseAttributes(requestHandlerSpan, { status: 200 });\n      expectNoError(requestHandlerSpan);\n    });\n\n    it(\"handles a thrown error from loader\", async () => {\n      const request = new Request(\"http://localhost/throws-error\", { method: \"GET\" });\n      await requestHandler(request, {});\n\n      const spans = getTestSpans();\n      expect(spans.length).toBe(2);\n\n      const [loaderSpan, requestHandlerSpan] = spans;\n\n      expectParentSpan(requestHandlerSpan, loaderSpan);\n\n      const expectedRequestAttributes = {\n        method: \"GET\",\n        url: \"http://localhost/throws-error\",\n      };\n\n      // Loader span\n      expectLoaderSpan(loaderSpan, \"routes/throws-error\");\n      expectRequestAttributes(loaderSpan, expectedRequestAttributes);\n      expectNoResponseAttributes(loaderSpan);\n      expectEventError(loaderSpan, \"oh no loader\");\n      expectNoAttributeError(loaderSpan);\n\n      // Request handler span\n      expectRequestHandlerSpan(requestHandlerSpan, {\n        path: \"/throws-error\",\n        id: \"routes/throws-error\",\n      });\n      expectRequestAttributes(requestHandlerSpan, expectedRequestAttributes);\n      expectResponseAttributes(requestHandlerSpan, { status: 500 });\n      expectNoError(requestHandlerSpan);\n    });\n\n    describe(\"with legacyErrorAttributes\", () => {\n      before(() => {\n        instrumentation.setConfig({\n          ...instrumentationConfig,\n          legacyErrorAttributes: true,\n        });\n      });\n\n      after(() => {\n        instrumentation.setConfig(instrumentationConfig);\n      });\n\n      it(\"handles a thrown error from loader\", async () => {\n        const request = new Request(\"http://localhost/throws-error\", { method: \"GET\" });\n        await requestHandler(request, {});\n\n        const spans = getTestSpans();\n        expect(spans.length).toBe(2);\n\n        const [loaderSpan, requestHandlerSpan] = spans;\n\n        expectParentSpan(requestHandlerSpan, loaderSpan);\n\n        const expectedRequestAttributes = {\n          method: \"GET\",\n          url: \"http://localhost/throws-error\",\n        };\n\n        // Loader span\n        expectLoaderSpan(loaderSpan, \"routes/throws-error\");\n        expectRequestAttributes(loaderSpan, expectedRequestAttributes);\n        expectNoResponseAttributes(loaderSpan);\n        expectError(loaderSpan, \"oh no loader\");\n\n        // Request handler span\n        expectRequestHandlerSpan(requestHandlerSpan, {\n          path: \"/throws-error\",\n          id: \"routes/throws-error\",\n        });\n        expectRequestAttributes(requestHandlerSpan, expectedRequestAttributes);\n        expectResponseAttributes(requestHandlerSpan, { status: 500 });\n        expectNoError(requestHandlerSpan);\n      });\n    });\n  });\n\n  describe(\"actions\", () => {\n    it(\"handles basic action\", async () => {\n      const request = new Request(\"http://localhost/parent\", { method: \"POST\" });\n      await requestHandler(request, {});\n\n      const spans = getTestSpans();\n      expect(spans.length).toBe(3);\n\n      const [actionSpan, loaderSpan, requestHandlerSpan] = spans;\n\n      expectParentSpan(requestHandlerSpan, loaderSpan);\n      expectParentSpan(requestHandlerSpan, actionSpan);\n\n      const expectedRequestAttributes = {\n        method: \"POST\",\n        url: \"http://localhost/parent\",\n      };\n\n      // Action span\n      expectActionSpan(actionSpan, \"routes/parent\");\n      expectRequestAttributes(actionSpan, expectedRequestAttributes);\n      expectResponseAttributes(actionSpan, { status: 200 });\n      expectNoError(actionSpan);\n\n      // Loader span\n      expectLoaderSpan(loaderSpan, \"routes/parent\");\n      expectRequestAttributes(loaderSpan, loaderRevalidation(expectedRequestAttributes));\n      expectResponseAttributes(loaderSpan, { status: 200 });\n      expectNoError(loaderSpan);\n\n      // Request handler span\n      expectRequestHandlerSpan(requestHandlerSpan, {\n        path: \"/parent\",\n        id: \"routes/parent\",\n      });\n      expectRequestAttributes(requestHandlerSpan, expectedRequestAttributes);\n      expectResponseAttributes(requestHandlerSpan, { status: 200 });\n      expectNoError(requestHandlerSpan);\n    });\n\n    it(\"extracts action formData fields from form data\", async () => {\n      const body = new FormData();\n      body.append(\"_action\", \"myAction\");\n      body.append(\"foo\", \"bar\");\n      body.append(\"num\", \"123\");\n      body.append(\"password\", \"test123\");\n      const request = new Request(\"http://localhost/parent\", {\n        method: \"POST\",\n        body,\n      });\n\n      await requestHandler(request, {});\n\n      const spans = getTestSpans();\n      expect(spans.length).toBe(3);\n\n      const [actionSpan, loaderSpan, requestHandlerSpan] = spans;\n\n      expectParentSpan(requestHandlerSpan, loaderSpan);\n      expectParentSpan(requestHandlerSpan, actionSpan);\n\n      const expectedRequestAttributes = {\n        method: \"POST\",\n        url: \"http://localhost/parent\",\n      };\n\n      // Action span\n      expectActionSpan(actionSpan, \"routes/parent\", {\n        actionType: \"myAction\",\n        foo: undefined,\n        num: \"123\",\n      });\n      expectRequestAttributes(actionSpan, expectedRequestAttributes);\n      expectResponseAttributes(actionSpan, { status: 200 });\n      expectNoError(actionSpan);\n\n      // Loader span\n      expectLoaderSpan(loaderSpan, \"routes/parent\");\n      expectRequestAttributes(loaderSpan, loaderRevalidation(expectedRequestAttributes));\n      expectResponseAttributes(loaderSpan, { status: 200 });\n      expectNoError(loaderSpan);\n\n      // Request handler span\n      expectRequestHandlerSpan(requestHandlerSpan, {\n        path: \"/parent\",\n        id: \"routes/parent\",\n      });\n      expectRequestAttributes(requestHandlerSpan, expectedRequestAttributes);\n      expectResponseAttributes(requestHandlerSpan, { status: 200 });\n      expectNoError(requestHandlerSpan);\n    });\n\n    it(\"handles a thrown error from action\", async () => {\n      const request = new Request(\"http://localhost/throws-error\", { method: \"POST\" });\n      await requestHandler(request, {});\n      const spans = getTestSpans();\n      expect(spans.length).toBe(2);\n\n      const [actionSpan, requestHandlerSpan] = spans;\n\n      expectParentSpan(requestHandlerSpan, actionSpan);\n\n      const expectedRequestAttributes = {\n        method: \"POST\",\n        url: \"http://localhost/throws-error\",\n      };\n\n      // Action span\n      expectActionSpan(actionSpan, \"routes/throws-error\");\n      expectRequestAttributes(actionSpan, expectedRequestAttributes);\n      expectNoResponseAttributes(actionSpan);\n      expectEventError(actionSpan, \"oh no action\");\n      expectNoAttributeError(actionSpan);\n\n      // Request handler span\n      expectRequestHandlerSpan(requestHandlerSpan, {\n        path: \"/throws-error\",\n        id: \"routes/throws-error\",\n      });\n      expectRequestAttributes(requestHandlerSpan, expectedRequestAttributes);\n      expectResponseAttributes(requestHandlerSpan, { status: 500 });\n      expectNoError(requestHandlerSpan);\n    });\n\n    describe(\"with legacyErrorAttributes\", () => {\n      before(() => {\n        instrumentation.setConfig({\n          ...instrumentationConfig,\n          legacyErrorAttributes: true,\n        });\n      });\n\n      after(() => {\n        instrumentation.setConfig(instrumentationConfig);\n      });\n\n      it(\"handles a thrown error from action\", async () => {\n        const request = new Request(\"http://localhost/throws-error\", { method: \"POST\" });\n        await requestHandler(request, {});\n        const spans = getTestSpans();\n        expect(spans.length).toBe(2);\n\n        const [actionSpan, requestHandlerSpan] = spans;\n\n        expectParentSpan(requestHandlerSpan, actionSpan);\n\n        const expectedRequestAttributes = {\n          method: \"POST\",\n          url: \"http://localhost/throws-error\",\n        };\n\n        // Action span\n        expectActionSpan(actionSpan, \"routes/throws-error\");\n        expectRequestAttributes(actionSpan, expectedRequestAttributes);\n        expectNoResponseAttributes(actionSpan);\n        expectError(actionSpan, \"oh no action\");\n\n        // Request handler span\n        expectRequestHandlerSpan(requestHandlerSpan, {\n          path: \"/throws-error\",\n          id: \"routes/throws-error\",\n        });\n        expectRequestAttributes(requestHandlerSpan, expectedRequestAttributes);\n        expectResponseAttributes(requestHandlerSpan, { status: 500 });\n        expectNoError(requestHandlerSpan);\n      });\n    });\n  });\n});\n"]}