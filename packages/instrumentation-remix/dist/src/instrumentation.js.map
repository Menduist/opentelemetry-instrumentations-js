{"version":3,"file":"instrumentation.js","sourceRoot":"","sources":["../../src/instrumentation.ts"],"names":[],"mappings":"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","sourcesContent":["import opentelemetry, { Span, SpanStatusCode } from \"@opentelemetry/api\";\nimport {\n  InstrumentationBase,\n  InstrumentationConfig,\n  InstrumentationNodeModuleDefinition,\n  InstrumentationNodeModuleFile,\n  isWrapped,\n} from \"@opentelemetry/instrumentation\";\nimport { SemanticAttributes } from \"@opentelemetry/semantic-conventions\";\n\nimport { getRPCMetadata, RPCType } from \"@opentelemetry/core\";\n\nimport type * as remixRunServerRuntime from \"@remix-run/server-runtime\";\nimport type * as remixRunServerRuntimeRouteMatching from \"@remix-run/server-runtime/dist/routeMatching\";\nimport type { RouteMatch } from \"@remix-run/server-runtime/dist/routeMatching\";\nimport type { ServerRoute } from \"@remix-run/server-runtime/dist/routes\";\nimport type * as remixRunServerRuntimeData from \"@remix-run/server-runtime/dist/data\";\n\nimport type { Params } from \"@remix-run/router\";\n\nimport { VERSION } from \"./version\";\n\nconst RemixSemanticAttributes = {\n  MATCH_PARAMS: \"match.params\",\n  MATCH_ROUTE_ID: \"match.route.id\",\n};\n\nexport interface RemixInstrumentationConfig extends InstrumentationConfig {\n  /**\n   * Mapping of FormData field to span attribute names. Appends attribute as `formData.${name}`.\n   *\n   * Provide `true` value to use the FormData field name as the attribute name, or provide\n   * a `string` value to map the field name to a custom attribute name.\n   *\n   * @default { _action: \"actionType\" }\n   */\n  actionFormDataAttributes?: Record<string, boolean | string>;\n  /**\n   * Whether to emit errors in the form of span attributes, as well as in span exception events.\n   * Defaults to `false`, meaning that only span exception events are emitted.\n   */\n  legacyErrorAttributes?: boolean;\n}\n\nconst DEFAULT_CONFIG: RemixInstrumentationConfig = {\n  actionFormDataAttributes: {\n    _action: \"actionType\",\n  },\n  legacyErrorAttributes: false,\n};\n\nexport class RemixInstrumentation extends InstrumentationBase {\n  constructor(config: RemixInstrumentationConfig = {}) {\n    super(\"RemixInstrumentation\", VERSION, Object.assign({}, DEFAULT_CONFIG, config));\n  }\n\n  override getConfig(): RemixInstrumentationConfig {\n    return this._config;\n  }\n\n  override setConfig(config: RemixInstrumentationConfig = {}) {\n    this._config = Object.assign({}, DEFAULT_CONFIG, config);\n  }\n\n  protected init() {\n    const remixRunServerRuntimeRouteMatchingFile = new InstrumentationNodeModuleFile(\n      \"@remix-run/server-runtime/dist/routeMatching.js\",\n      [\"1.6.2 - 2.x\"],\n      (moduleExports: typeof remixRunServerRuntimeRouteMatching) => {\n        // createRequestHandler\n        if (isWrapped(moduleExports[\"matchServerRoutes\"])) {\n          this._unwrap(moduleExports, \"matchServerRoutes\");\n        }\n        this._wrap(moduleExports, \"matchServerRoutes\", this._patchMatchServerRoutes());\n\n        return moduleExports;\n      },\n      (moduleExports: typeof remixRunServerRuntimeRouteMatching) => {\n        this._unwrap(moduleExports, \"matchServerRoutes\");\n      }\n    );\n\n    /*\n     * Before Remix v1.6.2 we needed to wrap `@remix-run/server-runtime/routeMatching` module import instead of\n     * `@remix-run/server-runtime/dist/routeMatching` module import. The wrapping logic is all the same though.\n     */\n    const remixRunServerRuntimeRouteMatchingPre_1_6_2_File = new InstrumentationNodeModuleFile(\n      \"@remix-run/server-runtime/routeMatching.js\",\n      [\"1.0 - 1.6.1\"],\n      (moduleExports: typeof remixRunServerRuntimeRouteMatching) => {\n        // matchServerRoutes\n        if (isWrapped(moduleExports[\"matchServerRoutes\"])) {\n          this._unwrap(moduleExports, \"matchServerRoutes\");\n        }\n        this._wrap(moduleExports, \"matchServerRoutes\", this._patchMatchServerRoutes());\n\n        return moduleExports;\n      },\n      (moduleExports: typeof remixRunServerRuntimeRouteMatching) => {\n        this._unwrap(moduleExports, \"matchServerRoutes\");\n      }\n    );\n\n    /*\n     * Before Remix v1.6.2 we needed to wrap `@remix-run/server-runtime/data` module import instead of\n     * `@remix-run/server-runtime/dist/data` module import. The wrapping logic is all the same though.\n     */\n    const remixRunServerRuntimeDataPre_1_6_2_File = new InstrumentationNodeModuleFile(\n      \"@remix-run/server-runtime/data.js\",\n      [\"1.0 - 1.6.1\"],\n      (moduleExports: typeof remixRunServerRuntimeData) => {\n        // callRouteLoader\n        if (isWrapped(moduleExports[\"callRouteLoader\"])) {\n          // @ts-ignore\n          this._unwrap(moduleExports, \"callRouteLoader\");\n        }\n        // @ts-ignore\n        this._wrap(moduleExports, \"callRouteLoader\", this._patchCallRouteLoaderPre_1_7_2());\n\n        // callRouteAction\n        if (isWrapped(moduleExports[\"callRouteAction\"])) {\n          // @ts-ignore\n          this._unwrap(moduleExports, \"callRouteAction\");\n        }\n        // @ts-ignore\n        this._wrap(moduleExports, \"callRouteAction\", this._patchCallRouteActionPre_1_7_2());\n        return moduleExports;\n      },\n      (moduleExports: typeof remixRunServerRuntimeData) => {\n        // @ts-ignore\n        this._unwrap(moduleExports, \"callRouteLoader\");\n        // @ts-ignore\n        this._unwrap(moduleExports, \"callRouteAction\");\n      }\n    );\n\n    /**\n     * Before Remix 1.7.3 we received the full `Match` object for each path in the route chain,\n     * afterwards we only receive the `routeId` and associated `params`.\n     */\n    const remixRunServerRuntimeDataPre_1_7_2_File = new InstrumentationNodeModuleFile(\n      \"@remix-run/server-runtime/dist/data.js\",\n      [\"1.6.2 - 1.7.2\"],\n      (moduleExports: typeof remixRunServerRuntimeData) => {\n        // callRouteLoader\n        if (isWrapped(moduleExports[\"callRouteLoader\"])) {\n          // @ts-ignore\n          this._unwrap(moduleExports, \"callRouteLoader\");\n        }\n        // @ts-ignore\n        this._wrap(moduleExports, \"callRouteLoader\", this._patchCallRouteLoaderPre_1_7_2());\n\n        // callRouteAction\n        if (isWrapped(moduleExports[\"callRouteAction\"])) {\n          // @ts-ignore\n          this._unwrap(moduleExports, \"callRouteAction\");\n        }\n        // @ts-ignore\n        this._wrap(moduleExports, \"callRouteAction\", this._patchCallRouteActionPre_1_7_2());\n        return moduleExports;\n      },\n      (moduleExports: typeof remixRunServerRuntimeData) => {\n        // @ts-ignore\n        this._unwrap(moduleExports, \"callRouteLoader\");\n        // @ts-ignore\n        this._unwrap(moduleExports, \"callRouteAction\");\n      }\n    );\n\n    const remixRunServerRuntimeDataPre_1_7_6_And_Post_2_9_File = new InstrumentationNodeModuleFile(\n      \"@remix-run/server-runtime/dist/data.js\",\n      [\"1.7.3 - 1.7.6\", \"2.9.0 - 2.x\"],\n      (moduleExports: typeof remixRunServerRuntimeData) => {\n        // callRouteLoader\n        if (isWrapped(moduleExports[\"callRouteLoader\"])) {\n          // @ts-ignore\n          this._unwrap(moduleExports, \"callRouteLoader\");\n        }\n        // @ts-ignore\n        this._wrap(moduleExports, \"callRouteLoader\", this._patchCallRouteLoader());\n\n        // callRouteAction\n        if (isWrapped(moduleExports[\"callRouteAction\"])) {\n          // @ts-ignore\n          this._unwrap(moduleExports, \"callRouteAction\");\n        }\n        // @ts-ignore\n        this._wrap(moduleExports, \"callRouteAction\", this._patchCallRouteAction());\n        return moduleExports;\n      },\n      (moduleExports: typeof remixRunServerRuntimeData) => {\n        // @ts-ignore\n        this._unwrap(moduleExports, \"callRouteLoader\");\n        // @ts-ignore\n        this._unwrap(moduleExports, \"callRouteAction\");\n      }\n    );\n\n    /*\n     * In Remix 1.8.0, the callXXLoader functions were renamed to callXXLoaderRR. They were renamed back in 2.9.0.\n     */\n    const remixRunServerRuntimeDataBetween_1_8_And_2_8_File = new InstrumentationNodeModuleFile(\n      \"@remix-run/server-runtime/dist/data.js\",\n      [\"1.8.0 - 2.8.x\"],\n      (moduleExports: typeof remixRunServerRuntimeData) => {\n        // callRouteLoader\n        if (isWrapped(moduleExports[\"callRouteLoaderRR\"])) {\n          // @ts-ignore\n          this._unwrap(moduleExports, \"callRouteLoaderRR\");\n        }\n        // @ts-ignore\n        this._wrap(moduleExports, \"callRouteLoaderRR\", this._patchCallRouteLoader());\n\n        // callRouteAction\n        if (isWrapped(moduleExports[\"callRouteActionRR\"])) {\n          // @ts-ignore\n          this._unwrap(moduleExports, \"callRouteActionRR\");\n        }\n        // @ts-ignore\n        this._wrap(moduleExports, \"callRouteActionRR\", this._patchCallRouteAction());\n        return moduleExports;\n      },\n      (moduleExports: typeof remixRunServerRuntimeData) => {\n        // @ts-ignore\n        this._unwrap(moduleExports, \"callRouteLoaderRR\");\n        // @ts-ignore\n        this._unwrap(moduleExports, \"callRouteActionRR\");\n      }\n    );\n\n    const remixRunServerRuntimeModule = new InstrumentationNodeModuleDefinition(\n      \"@remix-run/server-runtime\",\n      [\">=1.*\"],\n      (moduleExports: typeof remixRunServerRuntime) => {\n        // createRequestHandler\n        if (isWrapped(moduleExports[\"createRequestHandler\"])) {\n          this._unwrap(moduleExports, \"createRequestHandler\");\n        }\n        this._wrap(moduleExports, \"createRequestHandler\", this._patchCreateRequestHandler());\n\n        return moduleExports;\n      },\n      (moduleExports: typeof remixRunServerRuntime) => {\n        this._unwrap(moduleExports, \"createRequestHandler\");\n      },\n      [\n        remixRunServerRuntimeRouteMatchingFile,\n        remixRunServerRuntimeRouteMatchingPre_1_6_2_File,\n        remixRunServerRuntimeDataPre_1_6_2_File,\n        remixRunServerRuntimeDataPre_1_7_2_File,\n        remixRunServerRuntimeDataPre_1_7_6_And_Post_2_9_File,\n        remixRunServerRuntimeDataBetween_1_8_And_2_8_File,\n      ]\n    );\n\n    return remixRunServerRuntimeModule;\n  }\n\n  private _patchMatchServerRoutes(): (original: typeof remixRunServerRuntimeRouteMatching.matchServerRoutes) => any {\n    const plugin = this;\n    return function matchServerRoutes(original) {\n      return function patchMatchServerRoutes(this: any): RouteMatch<ServerRoute> {\n        const result = original.apply(this, arguments as any);\n\n        const span = opentelemetry.trace.getSpan(opentelemetry.context.active());\n\n        const route = (result || []).slice(-1)[0]?.route;\n\n        const routePath = route?.path;\n        if (span && routePath) {\n          span.setAttribute(SemanticAttributes.HTTP_ROUTE, routePath);\n          span.updateName(`remix.request ${routePath}`);\n        }\n\n        const routeId = route?.id;\n        if (span && routeId) {\n          span.setAttribute(RemixSemanticAttributes.MATCH_ROUTE_ID, routeId);\n        }\n\n\tconst rpcMetadata = getRPCMetadata(opentelemetry.context.active());\n\tif (rpcMetadata?.type === RPCType.HTTP) {\n          rpcMetadata.route = routeId;\n        }\n\n\n        return result;\n      };\n    };\n  }\n\n  private _patchCreateRequestHandler(): (original: typeof remixRunServerRuntime.createRequestHandler) => any {\n    const plugin = this;\n    return function createRequestHandler(original) {\n      return function patchCreateRequestHandler(this: any): remixRunServerRuntime.RequestHandler {\n        const originalRequestHandler: remixRunServerRuntime.RequestHandler = original.apply(this, arguments as any);\n\n        return (request: Request, loadContext?: remixRunServerRuntime.AppLoadContext) => {\n          const span = plugin.tracer.startSpan(\n            `remix.request`,\n            {\n              attributes: { [SemanticAttributes.CODE_FUNCTION]: \"requestHandler\" },\n            },\n            opentelemetry.context.active()\n          );\n          addRequestAttributesToSpan(span, request);\n\n          const originalResponsePromise = opentelemetry.context.with(\n            opentelemetry.trace.setSpan(opentelemetry.context.active(), span),\n            () => originalRequestHandler(request, loadContext)\n          );\n          return originalResponsePromise\n            .then((response) => {\n              addResponseAttributesToSpan(span, response);\n              return response;\n            })\n            .catch((error) => {\n              plugin.addErrorToSpan(span, error);\n              throw error;\n            })\n            .finally(() => {\n              span.end();\n            });\n        };\n      };\n    };\n  }\n\n  // @ts-ignore\n  private _patchCallRouteLoader(): (original: typeof remixRunServerRuntimeData.callRouteLoader) => any {\n    const plugin = this;\n    return function callRouteLoader(original) {\n      return function patchCallRouteLoader(this: any): Promise<Response> {\n        const [params] = arguments as unknown as any;\n\n        const span = plugin.tracer.startSpan(\n          `LOADER ${params.routeId}`,\n          { attributes: { [SemanticAttributes.CODE_FUNCTION]: \"loader\" } },\n          opentelemetry.context.active()\n        );\n\n        addRequestAttributesToSpan(span, params.request);\n        addMatchAttributesToSpan(span, { routeId: params.routeId, params: params.params });\n\n        return opentelemetry.context.with(opentelemetry.trace.setSpan(opentelemetry.context.active(), span), () => {\n          const originalResponsePromise: Promise<Response> = original.apply(this, arguments as any);\n          return originalResponsePromise\n            .then((response) => {\n              addResponseAttributesToSpan(span, response);\n              return response;\n            })\n            .catch((error) => {\n              plugin.addErrorToSpan(span, error);\n              throw error;\n            })\n            .finally(() => {\n              span.end();\n            });\n        });\n      };\n    };\n  }\n\n  // @ts-ignore\n  private _patchCallRouteLoaderPre_1_7_2(): (original: typeof remixRunServerRuntimeData.callRouteLoader) => any {\n    const plugin = this;\n    return function callRouteLoader(original) {\n      return function patchCallRouteLoader(this: any): Promise<Response> {\n        // Cast as `any` to avoid typescript errors since this is patching an older version\n        const [params] = arguments as unknown as any;\n\n        const span = plugin.tracer.startSpan(\n          `LOADER ${params.match.route.id}`,\n          { attributes: { [SemanticAttributes.CODE_FUNCTION]: \"loader\" } },\n          opentelemetry.context.active()\n        );\n\n        addRequestAttributesToSpan(span, params.request);\n        addMatchAttributesToSpan(span, { routeId: params.match.route.id, params: params.match.params });\n\n        return opentelemetry.context.with(opentelemetry.trace.setSpan(opentelemetry.context.active(), span), () => {\n          const originalResponsePromise: Promise<Response> = original.apply(this, arguments as any);\n          return originalResponsePromise\n            .then((response) => {\n              addResponseAttributesToSpan(span, response);\n              return response;\n            })\n            .catch((error) => {\n              plugin.addErrorToSpan(span, error);\n              throw error;\n            })\n            .finally(() => {\n              span.end();\n            });\n        });\n      };\n    };\n  }\n\n  // @ts-ignore\n  private _patchCallRouteAction(): (original: typeof remixRunServerRuntimeData.callRouteAction) => any {\n    const plugin = this;\n    return function callRouteAction(original) {\n      return async function patchCallRouteAction(this: any): Promise<Response> {\n        const [params] = arguments as unknown as any;\n        const clonedRequest = params.request.clone();\n        const span = plugin.tracer.startSpan(\n          `ACTION ${params.routeId}`,\n          { attributes: { [SemanticAttributes.CODE_FUNCTION]: \"action\" } },\n          opentelemetry.context.active()\n        );\n\n        addRequestAttributesToSpan(span, clonedRequest);\n        addMatchAttributesToSpan(span, { routeId: params.routeId, params: params.params });\n\n        return opentelemetry.context.with(\n          opentelemetry.trace.setSpan(opentelemetry.context.active(), span),\n          async () => {\n            const originalResponsePromise: Promise<Response> = original.apply(this, arguments as any);\n\n            return originalResponsePromise\n              .then(async (response) => {\n                addResponseAttributesToSpan(span, response);\n\n                try {\n                  const formData = await clonedRequest.formData();\n                  const { actionFormDataAttributes: actionFormAttributes } = plugin.getConfig();\n                  formData.forEach((value, key) => {\n                    if (actionFormAttributes[key] && actionFormAttributes[key] !== false) {\n                      const keyName = actionFormAttributes[key] === true ? key : actionFormAttributes[key];\n                      span.setAttribute(`formData.${keyName}`, value.toString());\n                    }\n                  });\n                } catch {\n                  // Silently continue on any error. Typically happens because the action body cannot be processed\n                  // into FormData, in which case we should just continue.\n                }\n\n                return response;\n              })\n              .catch(async (error) => {\n                plugin.addErrorToSpan(span, error);\n                throw error;\n              })\n              .finally(() => {\n                span.end();\n              });\n          }\n        );\n      };\n    };\n  }\n\n  // @ts-ignore\n  private _patchCallRouteActionPre_1_7_2(): (original: typeof remixRunServerRuntimeData.callRouteAction) => any {\n    const plugin = this;\n    return function callRouteAction(original) {\n      return async function patchCallRouteAction(this: any): Promise<Response> {\n        // Cast as `any` to avoid typescript errors since this is patching an older version\n        const [params] = arguments as unknown as any;\n        const clonedRequest = params.request.clone();\n        const span = plugin.tracer.startSpan(\n          `ACTION ${params.match.route.id}`,\n          { attributes: { [SemanticAttributes.CODE_FUNCTION]: \"action\" } },\n          opentelemetry.context.active()\n        );\n\n        addRequestAttributesToSpan(span, clonedRequest);\n        addMatchAttributesToSpan(span, { routeId: params.match.route.id, params: params.match.params });\n\n        return opentelemetry.context.with(\n          opentelemetry.trace.setSpan(opentelemetry.context.active(), span),\n          async () => {\n            const originalResponsePromise: Promise<Response> = original.apply(this, arguments as any);\n\n            return originalResponsePromise\n              .then(async (response) => {\n                addResponseAttributesToSpan(span, response);\n\n                try {\n                  const formData = await clonedRequest.formData();\n                  const { actionFormDataAttributes: actionFormAttributes } = plugin.getConfig();\n                  formData.forEach((value, key) => {\n                    if (actionFormAttributes[key] && actionFormAttributes[key] !== false) {\n                      const keyName = actionFormAttributes[key] === true ? key : actionFormAttributes[key];\n                      span.setAttribute(`formData.${keyName}`, value.toString());\n                    }\n                  });\n                } catch {\n                  // Silently continue on any error. Typically happens because the action body cannot be processed\n                  // into FormData, in which case we should just continue.\n                }\n\n                return response;\n              })\n              .catch(async (error) => {\n                plugin.addErrorToSpan(span, error);\n                throw error;\n              })\n              .finally(() => {\n                span.end();\n              });\n          }\n        );\n      };\n    };\n  }\n\n  private addErrorToSpan(span: Span, error: Error) {\n    addErrorEventToSpan(span, error);\n\n    if (this.getConfig().legacyErrorAttributes || false) {\n      addErrorAttributesToSpan(span, error);\n    }\n  }\n}\n\nconst addRequestAttributesToSpan = (span: Span, request: Request) => {\n  span.setAttributes({\n    [SemanticAttributes.HTTP_METHOD]: request.method,\n    [SemanticAttributes.HTTP_URL]: request.url,\n  });\n};\n\nconst addMatchAttributesToSpan = (span: Span, match: { routeId: string; params: Params<string> }) => {\n  span.setAttributes({\n    [RemixSemanticAttributes.MATCH_ROUTE_ID]: match.routeId,\n  });\n\n  Object.keys(match.params).forEach((paramName) => {\n    span.setAttribute(`${RemixSemanticAttributes.MATCH_PARAMS}.${paramName}`, match.params[paramName] || \"(undefined)\");\n  });\n};\n\nconst addResponseAttributesToSpan = (span: Span, response: Response | null) => {\n  if (response) {\n    span.setAttributes({\n      [SemanticAttributes.HTTP_STATUS_CODE]: response.status,\n    });\n  }\n};\n\nconst addErrorEventToSpan = (span: Span, error: Error) => {\n  span.recordException(error);\n  span.setStatus({ code: SpanStatusCode.ERROR, message: error.message });\n};\n\nconst addErrorAttributesToSpan = (span: Span, error: Error) => {\n  span.setAttribute(\"error\", true);\n  if (error.message) {\n    span.setAttribute(SemanticAttributes.EXCEPTION_MESSAGE, error.message);\n  }\n  if (error.stack) {\n    span.setAttribute(SemanticAttributes.EXCEPTION_STACKTRACE, error.stack);\n  }\n};\n"]}